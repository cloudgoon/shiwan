<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.game.mapper.admin.AgencyMapper">
    
	<sql id="agencyColumns">
		a.id AS "id",
		a.name AS "name",
		a.password AS "password",
		a.phone_num AS "phoneNum",
		a.user_id AS "user.id",
		a.balance AS "balance",
		a.alipay_name AS "alipayName",
		a.alipay_account AS "alipayAccount",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
				
				
				
				
		user.login_name AS "user.loginName"
	</sql>
	
	<sql id="agencyJoins">
		
		LEFT JOIN sys_user user ON user.id = a.user_id
	</sql>
	
    
	<select id="get" resultType="Agency" >
		SELECT 
			<include refid="agencyColumns"/>
		FROM game_agency a
		<include refid="agencyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Agency" >
		SELECT 
			<include refid="agencyColumns"/>
		FROM game_agency a
		<include refid="agencyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="phoneNum != null and phoneNum != ''">
				AND a.phone_num = #{phoneNum}
			</if>
			<if test="user != null and user.id != null and user.id != ''">
				AND a.user_id = #{user.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Agency" >
		SELECT 
			<include refid="agencyColumns"/>
		FROM game_agency a
		<include refid="agencyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO game_agency(
			id,
			name,
			password,
			phone_num,
			user_id,
			balance,
			alipay_name,
			alipay_account,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{password},
			#{phoneNum},
			#{user.id},
			#{balance},
			#{alipayName},
			#{alipayAccount},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE game_agency SET 	
			name = #{name},
			password = #{password},
			phone_num = #{phoneNum},
			user_id = #{user.id},
			balance = #{balance},
			alipay_name = #{alipayName},
			alipay_account = #{alipayAccount},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM game_agency
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE game_agency SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Agency" statementType="STATEMENT">
		select * FROM game_agency  where ${propertyName} = '${value}'
	</select>
	
</mapper>